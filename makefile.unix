#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -Ideps
CFLAGS = -Wall -std=c++1z -fexceptions -DNO_VEC_SUPPORT -DNO_COMPRESSION -DNET_CLIENT -DNO_SFML
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -lpsapi -limgui -lsfml-graphics -lsfml-window -lsfml-system -lfreetype -lopengl32

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/game_window_manager

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/game_window_manager

INC_DEPLOY = $(INC)
CFLAGS_DEPLOY = $(CFLAGS) -O2
RESINC_DEPLOY = $(RESINC)
RCFLAGS_DEPLOY = $(RCFLAGS)
LIBDIR_DEPLOY = $(LIBDIR)
LIB_DEPLOY = $(LIB)
LDFLAGS_DEPLOY = $(LDFLAGS) -s
OBJDIR_DEPLOY = obj/Deploy
DEP_DEPLOY = 
OUT_DEPLOY = bin/Deploy/game_window_manager

OBJ_DEBUG = $(OBJDIR_DEBUG)/deps/funserialisation/serialise.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/process_manager.o $(OBJDIR_DEBUG)/winapi_interop.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/deps/funserialisation/serialise.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/process_manager.o $(OBJDIR_RELEASE)/winapi_interop.o

OBJ_DEPLOY = $(OBJDIR_DEPLOY)/deps/funserialisation/serialise.o $(OBJDIR_DEPLOY)/main.o $(OBJDIR_DEPLOY)/process_manager.o $(OBJDIR_DEPLOY)/winapi_interop.o

all: debug release deploy

clean: clean_debug clean_release clean_deploy

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG)/deps/funserialisation || mkdir -p $(OBJDIR_DEBUG)/deps/funserialisation
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/deps/funserialisation/serialise.o: deps/funserialisation/serialise.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c deps/funserialisation/serialise.cpp -o $(OBJDIR_DEBUG)/deps/funserialisation/serialise.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/process_manager.o: process_manager.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c process_manager.cpp -o $(OBJDIR_DEBUG)/process_manager.o

$(OBJDIR_DEBUG)/winapi_interop.o: winapi_interop.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c winapi_interop.cpp -o $(OBJDIR_DEBUG)/winapi_interop.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)/deps/funserialisation
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/deps/funserialisation || mkdir -p $(OBJDIR_RELEASE)/deps/funserialisation
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/deps/funserialisation/serialise.o: deps/funserialisation/serialise.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c deps/funserialisation/serialise.cpp -o $(OBJDIR_RELEASE)/deps/funserialisation/serialise.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/process_manager.o: process_manager.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c process_manager.cpp -o $(OBJDIR_RELEASE)/process_manager.o

$(OBJDIR_RELEASE)/winapi_interop.o: winapi_interop.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c winapi_interop.cpp -o $(OBJDIR_RELEASE)/winapi_interop.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/deps/funserialisation
	rm -rf $(OBJDIR_RELEASE)

before_deploy: 
	test -d bin/Deploy || mkdir -p bin/Deploy
	test -d $(OBJDIR_DEPLOY)/deps/funserialisation || mkdir -p $(OBJDIR_DEPLOY)/deps/funserialisation
	test -d $(OBJDIR_DEPLOY) || mkdir -p $(OBJDIR_DEPLOY)

after_deploy: 

deploy: before_deploy out_deploy after_deploy

out_deploy: before_deploy $(OBJ_DEPLOY) $(DEP_DEPLOY)
	$(LD) $(LIBDIR_DEPLOY) -o $(OUT_DEPLOY) $(OBJ_DEPLOY)  $(LDFLAGS_DEPLOY) $(LIB_DEPLOY)

$(OBJDIR_DEPLOY)/deps/funserialisation/serialise.o: deps/funserialisation/serialise.cpp
	$(CXX) $(CFLAGS_DEPLOY) $(INC_DEPLOY) -c deps/funserialisation/serialise.cpp -o $(OBJDIR_DEPLOY)/deps/funserialisation/serialise.o

$(OBJDIR_DEPLOY)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEPLOY) $(INC_DEPLOY) -c main.cpp -o $(OBJDIR_DEPLOY)/main.o

$(OBJDIR_DEPLOY)/process_manager.o: process_manager.cpp
	$(CXX) $(CFLAGS_DEPLOY) $(INC_DEPLOY) -c process_manager.cpp -o $(OBJDIR_DEPLOY)/process_manager.o

$(OBJDIR_DEPLOY)/winapi_interop.o: winapi_interop.cpp
	$(CXX) $(CFLAGS_DEPLOY) $(INC_DEPLOY) -c winapi_interop.cpp -o $(OBJDIR_DEPLOY)/winapi_interop.o

clean_deploy: 
	rm -f $(OBJ_DEPLOY) $(OUT_DEPLOY)
	rm -rf bin/Deploy
	rm -rf $(OBJDIR_DEPLOY)/deps/funserialisation
	rm -rf $(OBJDIR_DEPLOY)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release before_deploy after_deploy clean_deploy

